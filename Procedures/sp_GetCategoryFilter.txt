USE [axy-blazor2]
GO
/****** Object:  StoredProcedure [dbo].[sp_GetCategoryFilter]    Script Date: 25.10.2021 20:56:13 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		
-- Create date: 
-- Description:
-- =============================================
Create procedure [dbo].[sp_GetCategoryFilter] 
	@StartDate datetime2,
	@EndDate datetime2,
	@IsInCome bit,
	@UserId nvarchar(max),
	@Filter nvarchar(10)
AS
BEGIN
IF(@StartDate = @EndDate)
  BEGIN
  Select 
		c.CategoryId,
		c.Name as CategoryName,
		c.Description,
		c.CurentData,
		c.IsIncome,
		c.ReceiptId,		
		rec.Name as NameReceipt,
		rec.Sum as SumReceipt,
		c.ExpenditureId,		
		ex.Name as NameExpenditure,
		ex.Sum as SumExpenditure
	From Categories c
	left join Receipts rec on rec.ReceiptId= c.ReceiptId
	left join Expenditures ex on ex.ExpenditureId = c.ExpenditureId
	where c.UserId = @userId 
  END

 ELSE IF (@Filter ='GetAll')
	BEGIN
	Select 
		c.CategoryId,
		c.Name as CategoryName,
		c.Description,
		c.CurentData,
		c.IsIncome,
		c.ReceiptId,		
		rec.Name as NameReceipt,
		rec.Sum as SumReceipt,
		c.ExpenditureId,		
		ex.Name as NameExpenditure,
		ex.Sum as SumExpenditure
	From Categories c
	left join Receipts rec on rec.ReceiptId= c.ReceiptId
	left join Expenditures ex on ex.ExpenditureId = c.ExpenditureId
	where CurentData BETWEEN @StartDate AND @EndDate and c.UserId = @userId 

	END
 ELSE 
	SET NOCOUNT ON;
	BEGIN 
	Select 
		c.CategoryId,
		c.Name as CategoryName,
		c.Description,
		c.CurentData,
		c.IsIncome,
		c.ReceiptId,		
		rec.Name as NameReceipt,
		rec.Sum as SumReceipt,
		c.ExpenditureId,		
		ex.Name as NameExpenditure,
		ex.Sum as SumExpenditure
	From Categories c
	left join Receipts rec on rec.ReceiptId= c.ReceiptId
	left join Expenditures ex on ex.ExpenditureId = c.ExpenditureId
	where CurentData BETWEEN @StartDate AND @EndDate AND IsIncome=@IsInCome	and c.UserId = @userId 
			
	END 
	
END


@page "/get-all-categories"
@inject NavigationManager _navigationManager
@inject IJSRuntime _jsRuntime
@*@bind-value="model.CurrentDate"*@


<i class="fa fa-bar-chart" style="font-size:36px" @onclick="Collaps"></i>

<div class="@(Collapsed? "collapse": "" )">

    <EditForm Model="@model" OnValidSubmit="HandleValidSubmit" class="body  p-3 mb-5 rounded ">
        <DataAnnotationsValidator />
        <div>
            <div class="row d-flex">
                <div class="col-lg-12 form-group">
                    <label for="additional">Start Date:</label>
                    <input type="date" class="form-control" @bind-value="model.StartDate" />
                </div>
            </div>
            <div class="row d-flex">
                <div class="col-lg-12 form-group">
                    <label for="additional">End Date:</label>
                    <input type="date" class="form-control" @bind-value="model.EndDate" />
                </div>
            </div>
            <div class="row d-flex m-2">
                <div class="form-check form-switch">
                    <div class="col-lg-12 form-group">
                        <input type="checkbox" class="form-check-input" @onclick="IsReceiptsExpenditures" @bind-value="model.IsIncome" id="flexSwitchCheckChecked" unchecked />
                        <label class="form-check-label" for="flexSwitchCheckChecked">Income/Outcome </label>
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="ml-lg-3 m-3">
                <button type="submit" class="btn btn-primary">&nbsp;Search&nbsp;</button>
                <NavLink class="btn btn-outline-secondary" @onclick="ResetSearch">&nbsp;Reset&nbsp;</NavLink>
            </div>
        </div>
    </EditForm>
</div>

<table class="table table-striped table-bordered table-sm">
    <thead>
        <tr>
            <th class="text-right">Sum</th>
            <th class="text-right">Name</th>
            <th class="text-right">Date Time</th>
            <th class="text-right">Description</th>
            <th class="text-center">Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in modelList)
        {

            <tr>
                @if (item.IsIncome)
                {
                    <td class="text-right" style="color:red">@item.SumExpenditure</td>
                    <td class="text-right">@item.NameCategory</td>
                    <td class="text-right">@item.CurrentDate.ToString("dd-MM-yyyy")</td>
                    <td class="text-right">@item.DescriptionCategory</td>

                }
                else
                {
                    <td class="text-right" style="color:green">@item.SumReceipt</td>
                    <td class="text-right">@item.NameCategory</td>
                    <td class="text-right">@item.CurrentDate.ToString("dd-MM-yyyy")</td>
                    <td class="text-right">@item.DescriptionCategory</td>
                }


                <td class="text-center">
                    <button class="btn btn-sm btn-outline-dark">
                        @*<i style='font-size:14px' @onclick="(() => Edit(item.Id))" class='far fa-edit'></i>*@
                        <img @onclick="(() => ShowPopup(item.Id))" src="https://img.icons8.com/external-kiranshastry-solid-kiranshastry/21/000000/external-edit-interface-kiranshastry-solid-kiranshastry.png" />
                    </button>

                </td>
            </tr>
        }
    </tbody>
</table>
@*style="display:block;"*@
@if (popup)
{
    <EditForm Model="@model" OnValidSubmit="HandleValidSubmitPopup" class="body  p-3 mb-5 rounded ">
        <div class="modal" tabindex="-1" role="dialog" style="display:block;">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title">Edit Category</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close" @onclick="(() => ClosePopup())">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        <table class="table table-striped table-bordered table-sm">
                            @if (!model.IsIncome)
                            {
                                <tr class="form-group">
                                    <td>Sum Income</td>
                                    <td><input class="form-control" type="number" @bind-value="model.SumReceipt" /></td>
                                </tr>
                            }
                            else
                            {
                                <tr class="form-group">
                                    <td>Sum OutCome</td>
                                    <td><input class="form-control" type="number" @bind-value="model.SumExpenditure" /></td>
                                </tr>
                            }

                            <tr class="form-group">
                                <td>Name</td>
                                <td><input class="form-control" type="text" @bind-value="model.NameCategory" /></td>
                            </tr>
                            <tr class="form-group">
                                <td>Date Time</td>
                                <td><input class="form-control" type="date" @bind-value="model.CurrentDate" /></td>
                            </tr>
                            <tr class="form-group">
                                <td>Description</td>
                                <td><input class="form-control" type="text" @bind-value="model.DescriptionCategory" /></td>
                            </tr>
                        </table>
                    </div>
                    <div class="modal-footer">
                        <button type="submit" class="btn btn-primary">Save changes</button>
                        <button type="button" class="btn btn-secondary" @onclick="(() => ClosePopup())" data-dismiss="modal">Close</button>
                    </div>
                </div>
            </div>
        </div>
    </EditForm>
}



@code {

    IEnumerable<CategoryDto> modelList = new List<CategoryDto>();
    CategoryDto model = new CategoryDto();
    protected bool Collapsed = true;
    bool popup = false;

    protected override async Task OnInitializedAsync()
    {
        modelList = CategoryAdapter.GetCategory();
        model.StartDate = DateTime.Now;
        model.EndDate = DateTime.Now;
    }

    public void ShowPopup(int id)
    {
        popup = true;
        model = CategoryAdapter.GetCategoryDtoId(id);
    }

    public void ClosePopup()
    {
        popup = false;
    }

    protected void Edit(int id)
    {
        _navigationManager.NavigateTo("/edit-category/" + id);
    }

    private void Collaps()
    {
        model.StartDate = DateTime.Now;
        model.EndDate = DateTime.Now;
        Collapsed = !Collapsed;
    }

    private void HandleValidSubmit()
    {
        modelList = CategoryAdapter.GetCategoryList(model);
        model.StartDate = DateTime.Now;
        model.EndDate = DateTime.Now;
        Collapsed = true;
    }

    private void HandleValidSubmitPopup()
    {
        if (model.IsIncome)
        {
            var expenditure = new ExpenditureDto();
            expenditure.Id = (int)model.ExpenditureId;
            expenditure.Name = model.NameCategory;
            expenditure.Sum = model.SumExpenditure;
            ExpenditureAdapter.SaveExpenditure(expenditure);
        }
        else
        {
            var receipt = new ReceiptDto();
            receipt.Id = (int)model.ReceiptId;
            receipt.Name = model.NameCategory;
            receipt.Sum = model.SumReceipt;
            ReceiptAdapter.SaveReceipt(receipt);
        }

        CategoryAdapter.SaveCategory(model);
        popup = false;
        modelList = CategoryAdapter.GetCategory();
    }

    public void IsReceiptsExpenditures()
    {
        if (!model.IsIncome)
        {
            model.IsIncome = true;
        }
        else
        {
            model.IsIncome = false;
        }
    }

    public void ResetSearch()
    {
        modelList = CategoryAdapter.GetCategory();
    }
}
